use crate::x86::defines::X86ArgType::{
    AH, AL, ALS, AX, AXS, BH, BL, BP, BX, CH, CL, CR32, CS, CX, DH, DI, DL, DR32, DS, DSBX, DSSI,
    DX, DXS, ES, ESDI, FS, GS, IMM, IMM16, IMM8, MEM, MM, MMX, MMXONLY, MOFFS, NONE, ONE, REG,
    REG32, REGONLY, REL, REL8, RM, SEG16, SEGPTR, SI, SP, SS, ST, STX, TR32, XM, XMM, XMMONLY,
};
use crate::x86::defines::{
    X86Instruction, OP_64, OP_ARG2_CL, OP_ARG2_IMM, OP_ARG2_IMM8, OP_BRANCH, OP_FAR, OP_IMM64,
    OP_L, OP_LL, OP_LOCK, OP_OP32_REGONLY, OP_REP, OP_REPE, OP_REPNE, OP_S, OP_STACK, OP_STOP,
    OP_STRING,
};

pub const INSTRUCTIONS_0F: [X86Instruction; 133] = [
    X86Instruction::new([0; 4], 0, 0, 0x00, 0, -1, "sldt", RM, NONE, OP_OP32_REGONLY), /* todo: implement this flag */
    X86Instruction::new([0; 4], 0, 0, 0x00, 1, -1, "str", RM, NONE, OP_OP32_REGONLY),
    X86Instruction::new([0; 4], 0, 0, 0x00, 2, 16, "lldt", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x00, 3, 16, "ltr", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x00, 4, 16, "verr", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x00, 5, 16, "verw", RM, NONE, 0),
    /* 00/6 unused */
    /* 00/7 unused */
    X86Instruction::new([0; 4], 0, 0, 0x01, 0, 0, "sgdt", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x01, 1, 0, "sidt", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x01, 2, 0, "lgdt", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x01, 3, 0, "lidt", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x01, 4, -1, "smsw", RM, NONE, OP_OP32_REGONLY),
    /* 01/5 unused */
    X86Instruction::new([0; 4], 0, 0, 0x01, 6, 16, "lmsw", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x01, 7, 0, "invlpg", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x02, 8, -1, "lar", REG, RM, OP_OP32_REGONLY), /* fixme: should be RM16 */
    X86Instruction::new([0; 4], 0, 0, 0x03, 8, -1, "lsl", REG, RM, OP_OP32_REGONLY), /* fixme: should be RM16 */
    /* 04 unused */
    X86Instruction::new([0; 4], 0, 0, 0x05, 8, 0, "syscall", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x06, 8, 0, "clts", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x07, 8, 0, "sysret", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x08, 8, 0, "invd", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x09, 8, 0, "wbinvd", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0d, 8, -1, "prefetch", RM, NONE, 0), /* Intel has NOP here; we're just following GCC */
    X86Instruction::new([0; 4], 0, 0, 0x18, 0, 8, "prefetchnta", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x18, 1, 8, "prefetcht0", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x18, 2, 8, "prefetcht1", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x18, 3, 8, "prefetcht2", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1f, 8, -1, "nop", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x20, 8, -1, "mov", REG32, CR32, 0), /* here mod is simply ignored */
    X86Instruction::new([0; 4], 0, 0, 0x21, 8, -1, "mov", REG32, DR32, 0),
    X86Instruction::new([0; 4], 0, 0, 0x22, 8, -1, "mov", CR32, REG32, 0),
    X86Instruction::new([0; 4], 0, 0, 0x23, 8, -1, "mov", DR32, REG32, 0),
    X86Instruction::new([0; 4], 0, 0, 0x24, 8, -1, "mov", REG32, TR32, 0),
    /* 25 unused */
    X86Instruction::new([0; 4], 0, 0, 0x26, 8, -1, "mov", TR32, REG32, 0),
    X86Instruction::new([0; 4], 0, 0, 0x30, 8, -1, "wrmsr", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x31, 8, -1, "rdtsc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x32, 8, -1, "rdmsr", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x33, 8, -1, "rdpmc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x34, 8, -1, "sysenter", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x35, 8, -1, "sysexit", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x40, 8, -1, "cmovo", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x41, 8, -1, "cmovno", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x42, 8, -1, "cmovb", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x43, 8, -1, "cmovae", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x44, 8, -1, "cmovz", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x45, 8, -1, "cmovnz", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x46, 8, -1, "cmovbe", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x47, 8, -1, "cmova", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x48, 8, -1, "cmovs", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x49, 8, -1, "cmovns", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4A, 8, -1, "cmovp", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4B, 8, -1, "cmovnp", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4C, 8, -1, "cmovl", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4D, 8, -1, "cmovge", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4E, 8, -1, "cmovle", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4F, 8, -1, "cmovg", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x80, 8, -1, "jo", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x81, 8, -1, "jno", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x82, 8, -1, "jb", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x83, 8, -1, "jae", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x84, 8, -1, "jz", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x85, 8, -1, "jnz", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x86, 8, -1, "jbe", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x87, 8, -1, "ja", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x88, 8, -1, "js", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x89, 8, -1, "jns", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x8A, 8, -1, "jp", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x8B, 8, -1, "jnp", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x8C, 8, -1, "jl", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x8D, 8, -1, "jge", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x8E, 8, -1, "jle", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x8F, 8, -1, "jg", REL, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x90, 0, 8, "seto", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x91, 0, 8, "setno", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x92, 0, 8, "setb", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x93, 0, 8, "setae", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x94, 0, 8, "setz", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x95, 0, 8, "setnz", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x96, 0, 8, "setbe", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x97, 0, 8, "seta", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x98, 0, 8, "sets", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x99, 0, 8, "setns", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9A, 0, 8, "setp", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9B, 0, 8, "setnp", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9C, 0, 8, "setl", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9D, 0, 8, "setge", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9E, 0, 8, "setle", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9F, 0, 8, "setg", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA0, 8, -1, "push", FS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0xA1, 8, -1, "pop", FS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0xA2, 8, 0, "cpuid", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA3, 8, -1, "bt", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA4, 8, -1, "shld", RM, REG, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0xA5, 8, -1, "shld", RM, REG, OP_ARG2_CL),
    /* A6,7 unused */
    X86Instruction::new([0; 4], 0, 0, 0xA8, 8, -1, "push", GS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0xA9, 8, -1, "pop", GS, NONE, OP_STACK),
    /* AA - rsm? */
    X86Instruction::new([0; 4], 0, 0, 0xAB, 8, -1, "bts", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xAC, 8, -1, "shrd", RM, REG, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0xAD, 8, -1, "shrd", RM, REG, OP_ARG2_CL),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 0, 0, "fxsave", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 1, 0, "fxrstor", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 2, 0, "ldmxcsr", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 3, 0, "stmxcsr", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 4, 0, "xsave", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 5, 0, "xrstor", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAE, 7, 0, "clflush", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xAF, 8, -1, "imul", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB0, 8, 8, "cmpxchg", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xB1, 8, -1, "cmpxchg", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xB2, 8, -1, "lss", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB3, 8, -1, "btr", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xB4, 8, -1, "lfs", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB5, 8, -1, "lgs", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB6, 8, -1, "movzx", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB7, 8, -1, "movzx", REG, RM, 0),
    /* B8, 9, A.0-3 unused */
    X86Instruction::new([0; 4], 0, 0, 0xBA, 4, -1, "bt", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBA, 5, -1, "bts", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xBA, 6, -1, "btr", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xBA, 7, -1, "btc", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xBB, 8, -1, "btc", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xBC, 8, -1, "bsf", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBD, 8, -1, "bsr", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBE, 8, -1, "movsx", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBF, 8, -1, "movsx", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 8, 8, "xadd", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 8, -1, "xadd", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xC7, 1, 0, "cmpxchg8b", MEM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xC8, 8, -1, "bswap", AX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC9, 8, -1, "bswap", CX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCA, 8, -1, "bswap", DX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCB, 8, -1, "bswap", BX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCC, 8, -1, "bswap", SP, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCD, 8, -1, "bswap", BP, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCE, 8, -1, "bswap", SI, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCF, 8, -1, "bswap", DI, NONE, 0),
];

// operand opcode:u16, subcode: u16, size: i8, name: String, arg0: ArgumentType, arg1: ArgumentType, flags: u32
pub const X86_32_INSTRUCTIONS: [X86Instruction; 256] = [
    X86Instruction::new([0; 4], 0, 0, 0x00, 8, 8, "add", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x01, 8, -1, "add", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x02, 8, 8, "add", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x03, 8, -1, "add", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x04, 8, 8, "add", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x05, 8, -1, "add", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x06, 8, -1, "push", ES, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x07, 8, -1, "pop", ES, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x08, 8, 8, "or", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x09, 8, -1, "or", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x0A, 8, 8, "or", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0B, 8, -1, "or", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0C, 8, 8, "or", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0D, 8, -1, "or", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0E, 8, -1, "push", CS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x0F, 8, 0, "", NONE, NONE, 0), /* two-byte codes */
    X86Instruction::new([0; 4], 0, 0, 0x10, 8, 8, "adc", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x11, 8, -1, "adc", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x12, 8, 8, "adc", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x13, 8, -1, "adc", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x14, 8, 8, "adc", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x15, 8, -1, "adc", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x16, 8, -1, "push", SS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x17, 8, -1, "pop", SS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x18, 8, 8, "sbb", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x19, 8, -1, "sbb", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x1A, 8, 8, "sbb", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1B, 8, -1, "sbb", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1C, 8, 8, "sbb", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1D, 8, -1, "sbb", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1E, 8, -1, "push", DS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x2F, 8, -1, "pop", DS, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x20, 8, 8, "and", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x21, 8, -1, "and", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x22, 8, 8, "and", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x23, 8, -1, "and", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x24, 8, 8, "and", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x25, 8, -1, "and", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x26, 8, 0, "es", NONE, NONE, 0), /* ES prefix */
    X86Instruction::new([0; 4], 0, 0, 0x27, 8, 0, "daa", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x28, 8, 8, "sub", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x29, 8, -1, "sub", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x2A, 8, 8, "sub", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2B, 8, -1, "sub", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2C, 8, 8, "sub", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2D, 8, -1, "sub", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2E, 8, 0, "cs", NONE, NONE, 0), /* CS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x2F, 8, 0, "das", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x30, 8, 8, "xor", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x31, 8, -1, "xor", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x32, 8, 8, "xor", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x33, 8, -1, "xor", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x34, 8, 8, "xor", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x35, 8, -1, "xor", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x36, 8, 0, "ss", NONE, NONE, 0), /* SS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x37, 8, 0, "aaa", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 8, 8, "cmp", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x39, 8, -1, "cmp", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 8, 8, "cmp", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3B, 8, -1, "cmp", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3C, 8, 8, "cmp", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3D, 8, -1, "cmp", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3E, 8, 0, "ds", NONE, NONE, 0), /* DS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x3F, 8, 0, "aas", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x40, 8, -1, "inc", AX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x41, 8, -1, "inc", CX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x42, 8, -1, "inc", DX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x43, 8, -1, "inc", BX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x44, 8, -1, "inc", SP, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x45, 8, -1, "inc", BP, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x46, 8, -1, "inc", SI, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x47, 8, -1, "inc", DI, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x48, 8, -1, "dec", AX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x49, 8, -1, "dec", CX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4A, 8, -1, "dec", DX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4B, 8, -1, "dec", BX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4C, 8, -1, "dec", SP, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4D, 8, -1, "dec", BP, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4E, 8, -1, "dec", SI, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4F, 8, -1, "dec", DI, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x50, 8, -1, "push", AX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x51, 8, -1, "push", CX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x52, 8, -1, "push", DX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x53, 8, -1, "push", BX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x54, 8, -1, "push", SP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x55, 8, -1, "push", BP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x56, 8, -1, "push", SI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x57, 8, -1, "push", DI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x58, 8, -1, "pop", AX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x59, 8, -1, "pop", CX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5A, 8, -1, "pop", DX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5B, 8, -1, "pop", BX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5C, 8, -1, "pop", SP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5D, 8, -1, "pop", BP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5E, 8, -1, "pop", SI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5F, 8, -1, "pop", DI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x60, 8, -1, "pusha", NONE, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x61, 8, -1, "popa", NONE, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x62, 8, -1, "bound", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x63, 8, 16, "arpl", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x64, 8, 0, "fs", NONE, NONE, 0), /* FS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x65, 8, 0, "gs", NONE, NONE, 0), /* GS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x66, 8, 0, "data", NONE, NONE, 0), /* op-size prefix */
    X86Instruction::new([0; 4], 0, 0, 0x67, 8, 0, "addr", NONE, NONE, 0), /* addr-size prefix */
    X86Instruction::new([0; 4], 0, 0, 0x68, 8, -1, "push", IMM, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x69, 8, -1, "imul", REG, RM, OP_ARG2_IMM),
    X86Instruction::new([0; 4], 0, 0, 0x6A, 8, -1, "push", IMM8, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x6B, 8, -1, "imul", REG, RM, OP_ARG2_IMM8),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6C,
        8,
        8,
        "ins",
        ESDI,
        DXS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6D,
        8,
        -1,
        "ins",
        ESDI,
        DXS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6E,
        8,
        8,
        "outs",
        DXS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6F,
        8,
        -1,
        "outs",
        DXS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new([0; 4], 0, 0, 0x70, 8, 0, "jo", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x71, 8, 0, "jno", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x72, 8, 0, "jb", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x73, 8, 0, "jae", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x74, 8, 0, "jz", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x75, 8, 0, "jnz", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x76, 8, 0, "jbe", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x77, 8, 0, "ja", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x78, 8, 0, "js", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x79, 8, 0, "jns", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7A, 8, 0, "jp", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7B, 8, 0, "jnp", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7C, 8, 0, "jl", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7D, 8, 0, "jge", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7E, 8, 0, "jle", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7F, 8, 0, "jg", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x80, 8, 0, "", NONE, NONE, 0), /* arithmetic operations */
    X86Instruction::new([0; 4], 0, 0, 0x81, 8, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x82, 8, 0, "", NONE, NONE, 0), /* alias for 80 */
    X86Instruction::new([0; 4], 0, 0, 0x83, 8, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x84, 8, 8, "test", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x85, 8, -1, "test", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x86, 8, 8, "xchg", REG, RM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x87, 8, -1, "xchg", REG, RM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x88, 8, 8, "mov", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x89, 8, -1, "mov", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8A, 8, 8, "mov", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8B, 8, -1, "mov", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8C, 8, -1, "mov", RM, SEG16, 0), /* fixme: should we replace eax with ax? */
    X86Instruction::new([0; 4], 0, 0, 0x8D, 8, -1, "lea", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8E, 8, -1, "mov", SEG16, RM, OP_OP32_REGONLY),
    X86Instruction::new([0; 4], 0, 0, 0x8F, 8, 0, "", NONE, NONE, 0), /* pop (subcode 0 only) */
    X86Instruction::new([0; 4], 0, 0, 0x90, 8, -1, "nop", NONE, NONE, OP_REP),
    X86Instruction::new([0; 4], 0, 0, 0x91, 8, -1, "xchg", AX, CX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x92, 8, -1, "xchg", AX, DX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x93, 8, -1, "xchg", AX, BX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x94, 8, -1, "xchg", AX, SP, 0),
    X86Instruction::new([0; 4], 0, 0, 0x95, 8, -1, "xchg", AX, BP, 0),
    X86Instruction::new([0; 4], 0, 0, 0x96, 8, -1, "xchg", AX, SI, 0),
    X86Instruction::new([0; 4], 0, 0, 0x97, 8, -1, "xchg", AX, DI, 0),
    X86Instruction::new([0; 4], 0, 0, 0x98, 8, -1, "cbw", NONE, NONE, 0), /* handled separately */
    X86Instruction::new([0; 4], 0, 0, 0x99, 8, -1, "cwd", NONE, NONE, 0), /* handled separately */
    X86Instruction::new([0; 4], 0, 0, 0x9A, 8, -1, "call", SEGPTR, NONE, OP_FAR),
    X86Instruction::new([0; 4], 0, 0, 0x9B, 8, 0, "wait", NONE, NONE, 0), /* wait ~prefix~ */
    X86Instruction::new([0; 4], 0, 0, 0x9C, 8, -1, "pushf", NONE, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x9D, 8, -1, "popf", NONE, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x9E, 8, 0, "sahf", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9F, 8, 0, "lahf", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA0, 8, 8, "mov", AL, MOFFS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA1, 8, -1, "mov", AX, MOFFS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA2, 8, 8, "mov", MOFFS, AL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA3, 8, -1, "mov", MOFFS, AX, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA4,
        8,
        8,
        "movs",
        DSSI,
        ESDI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA5,
        8,
        -1,
        "movs",
        DSSI,
        ESDI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA6,
        8,
        8,
        "cmps",
        DSSI,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA7,
        8,
        -1,
        "cmps",
        DSSI,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xA8, 8, 8, "test", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA9, 8, -1, "test", AX, IMM, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAA,
        8,
        8,
        "stos",
        ESDI,
        ALS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAB,
        8,
        -1,
        "stos",
        ESDI,
        AXS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAC,
        8,
        8,
        "lods",
        ALS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAD,
        8,
        -1,
        "lods",
        AXS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAE,
        8,
        8,
        "scas",
        ALS,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAF,
        8,
        -1,
        "scas",
        AXS,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xB0, 8, 8, "mov", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB1, 8, 8, "mov", CL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB2, 8, 8, "mov", DL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB3, 8, 8, "mov", BL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB4, 8, 8, "mov", AH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB5, 8, 8, "mov", CH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB6, 8, 8, "mov", DH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB7, 8, 8, "mov", BH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB8, 8, -1, "mov", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB9, 8, -1, "mov", CX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBA, 8, -1, "mov", DX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBB, 8, -1, "mov", BX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBC, 8, -1, "mov", SP, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBD, 8, -1, "mov", BP, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBE, 8, -1, "mov", SI, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xBF, 8, -1, "mov", DI, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xC1, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xC2, 8, 0, "ret", IMM16, NONE, OP_STOP), /* fixme: can take OP32... */
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xC3,
        8,
        0,
        "ret",
        NONE,
        NONE,
        OP_STOP | OP_REPE | OP_REPNE,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xC4, 8, -1, "les", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC5, 8, -1, "lds", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC6, 0, 0, "", NONE, NONE, 0), /* mov (subcode 0 only) */
    X86Instruction::new([0; 4], 0, 0, 0xC7, 0, 0, "", NONE, NONE, 0), /* mov (subcode 0 only) */
    X86Instruction::new([0; 4], 0, 0, 0xC8, 8, 0, "enter", IMM16, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC9, 8, 0, "leave", NONE, NONE, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xCA,
        8,
        0,
        "ret",
        IMM16,
        NONE,
        OP_STOP | OP_FAR,
    ), /* a change in bitness should only happen across Segment boundaries */
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xCB,
        8,
        0,
        "ret",
        NONE,
        NONE,
        OP_STOP | OP_FAR,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xCC, 8, 0, "int3", NONE, NONE, OP_STOP),
    X86Instruction::new([0; 4], 0, 0, 0xCD, 8, 0, "int", IMM8, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCE, 8, 0, "into", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCF, 8, 0, "iret", NONE, NONE, OP_STOP),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD1, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD2, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD3, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD4, 8, 0, "amx", IMM8, NONE, 0), /* unofficial name */
    X86Instruction::new([0; 4], 0, 0, 0xD5, 8, 0, "adx", IMM8, NONE, 0), /* unofficial name */
    X86Instruction::new([0; 4], 0, 0, 0xD6, 8, 0, "", NONE, NONE, 0), /* undefined (fixme: salc?) */
    X86Instruction::new([0; 4], 0, 0, 0xD7, 8, 0, "xlatb", DSBX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDA, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDB, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDC, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDD, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDE, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xE0, 8, 0, "loopnz", REL8, NONE, OP_BRANCH), /* fixme: how to print this? */
    X86Instruction::new([0; 4], 0, 0, 0xE1, 8, 0, "loopz", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0xE2, 8, 0, "loop", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0xE3, 8, -1, "jcxz", REL8, NONE, OP_BRANCH), /* name handled separately */
    X86Instruction::new([0; 4], 0, 0, 0xE4, 8, 8, "in", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE5, 8, -1, "in", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE6, 8, 8, "out", IMM, AL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE7, 8, -1, "out", IMM, AX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE8, 8, -1, "call", REL, NONE, OP_BRANCH),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xE9,
        8,
        -1,
        "jmp",
        REL,
        NONE,
        OP_BRANCH | OP_STOP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xEA,
        8,
        -1,
        "jmp",
        SEGPTR,
        NONE,
        OP_FAR | OP_STOP,
    ), /* a change in bitness should only happen across Segment boundaries */
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xEB,
        8,
        0,
        "jmp",
        REL8,
        NONE,
        OP_BRANCH | OP_STOP,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xEC, 8, 8, "in", AL, DXS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xED, 8, -1, "in", AX, DXS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEE, 8, 8, "out", DXS, AL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEF, 8, -1, "out", DXS, AX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF0, 8, 0, "lock", NONE, NONE, 0), /* lock prefix */
    X86Instruction::new([0; 4], 0, 0, 0xF1, 8, 0, "", NONE, NONE, 0), /* undefined (fixme: int1/icebp?) */
    X86Instruction::new([0; 4], 0, 0, 0xF2, 8, 0, "repne", NONE, NONE, 0), /* repne prefix */
    X86Instruction::new([0; 4], 0, 0, 0xF3, 8, 0, "repe", NONE, NONE, 0), /* repe prefix */
    X86Instruction::new([0; 4], 0, 0, 0xF4, 8, 0, "hlt", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF5, 8, 0, "cmc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 8, 0, "", NONE, NONE, 0), /* group #3 */
    X86Instruction::new([0; 4], 0, 0, 0xF7, 8, 0, "", NONE, NONE, 0), /* group #3 */
    X86Instruction::new([0; 4], 0, 0, 0xF8, 8, 0, "clc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF9, 8, 0, "stc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFA, 8, 0, "cli", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFB, 8, 0, "sti", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFC, 8, 0, "cld", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFD, 8, 0, "std", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFE, 8, 0, "", NONE, NONE, 0), /* inc/dec */
    X86Instruction::new([0; 4], 0, 0, 0xFF, 8, 0, "", NONE, NONE, 0), /* group #5 */
];

pub const X86_64_INSTRUCTIONS: [X86Instruction; 256] = [
    X86Instruction::new([0; 4], 0, 0, 0x00, 8, 8, "add", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x01, 8, -1, "add", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x02, 8, 8, "add", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x03, 8, -1, "add", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x04, 8, 8, "add", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x05, 8, -1, "add", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x06, 8, 0, "", NONE, NONE, 0), /* undefined (was push es) */
    X86Instruction::new([0; 4], 0, 0, 0x07, 8, 0, "", NONE, NONE, 0), /* undefined (was pop es) */
    X86Instruction::new([0; 4], 0, 0, 0x08, 8, 8, "or", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x09, 8, -1, "or", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x0A, 8, 8, "or", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0B, 8, -1, "or", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0C, 8, 8, "or", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0D, 8, -1, "or", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x0E, 8, 0, "", NONE, NONE, 0), /* undefined (was push cs) */
    X86Instruction::new([0; 4], 0, 0, 0x0F, 8, 0, "", NONE, NONE, 0), /* two-byte codes */
    X86Instruction::new([0; 4], 0, 0, 0x10, 8, 8, "adc", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x11, 8, -1, "adc", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x12, 8, 8, "adc", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x13, 8, -1, "adc", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x14, 8, 8, "adc", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x15, 8, -1, "adc", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x16, 8, 0, "", NONE, NONE, 0), /* undefined (was push ss) */
    X86Instruction::new([0; 4], 0, 0, 0x17, 8, 0, "", NONE, NONE, 0), /* undefined (was pop ss) */
    X86Instruction::new([0; 4], 0, 0, 0x18, 8, 8, "sbb", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x19, 8, -1, "sbb", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x1A, 8, 8, "sbb", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1B, 8, -1, "sbb", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1C, 8, 8, "sbb", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1D, 8, -1, "sbb", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x1E, 8, 0, "", NONE, NONE, 0), /* undefined (was push ds) */
    X86Instruction::new([0; 4], 0, 0, 0x1F, 8, 0, "", NONE, NONE, 0), /* undefined (was pop ds) */
    X86Instruction::new([0; 4], 0, 0, 0x20, 8, 8, "and", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x21, 8, -1, "and", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x22, 8, 8, "and", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x23, 8, -1, "and", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x24, 8, 8, "and", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x25, 8, -1, "and", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x26, 80, 0, "", NONE, NONE, 0), /* undefined (was es:) */
    X86Instruction::new([0; 4], 0, 0, 0x27, 8, 0, "", NONE, NONE, 0),  /* undefined (was daa) */
    X86Instruction::new([0; 4], 0, 0, 0x28, 8, 8, "sub", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x29, 8, -1, "sub", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x2A, 8, 8, "sub", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2B, 8, -1, "sub", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2C, 8, 8, "sub", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2D, 8, -1, "sub", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2E, 8, 0, "", NONE, NONE, 0), /* undefined (was cs:) */
    X86Instruction::new([0; 4], 0, 0, 0x2F, 8, 0, "", NONE, NONE, 0), /* undefined (was das) */
    X86Instruction::new([0; 4], 0, 0, 0x30, 8, 8, "xor", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x31, 8, -1, "xor", RM, REG, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x32, 8, 8, "xor", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x33, 8, -1, "xor", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x34, 8, 8, "xor", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x35, 8, -1, "xor", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x36, 8, 0, "", NONE, NONE, 0), /* undefined (was ss:) */
    X86Instruction::new([0; 4], 0, 0, 0x37, 8, 0, "", NONE, NONE, 0), /* undefined (was aaa) */
    X86Instruction::new([0; 4], 0, 0, 0x38, 8, 8, "cmp", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x39, 8, -1, "cmp", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 8, 8, "cmp", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3B, 8, -1, "cmp", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3C, 8, 8, "cmp", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3D, 8, -1, "cmp", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3E, 8, 0, "", NONE, NONE, 0), /* undefined (was ds:) */
    X86Instruction::new([0; 4], 0, 0, 0x3F, 8, 0, "", NONE, NONE, 0), /* undefined (was aas) */
    X86Instruction::new([0; 4], 0, 0, 0x40, 8, 0, "rex", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x41, 8, 0, "rex.B", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x42, 8, 0, "rex.X", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x43, 8, 0, "rex.XB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x44, 8, 0, "rex.R", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x45, 8, 0, "rex.RB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x46, 8, 0, "rex.RX", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x47, 8, 0, "rex.RXB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x48, 8, 0, "rex.W", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x49, 8, 0, "rex.WB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4A, 8, 0, "rex.WX", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4B, 8, 0, "rex.WXB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4C, 8, 0, "rex.WR", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4D, 8, 0, "rex.WRB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4E, 8, 0, "rex.WRX", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x4F, 8, 0, "rex.WRXB", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x50, 8, -1, "push", AX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x51, 8, -1, "push", CX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x52, 8, -1, "push", DX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x53, 8, -1, "push", BX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x54, 8, -1, "push", SP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x55, 8, -1, "push", BP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x56, 8, -1, "push", SI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x57, 8, -1, "push", DI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x58, 8, -1, "pop", AX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x59, 8, -1, "pop", CX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5A, 8, -1, "pop", DX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5B, 8, -1, "pop", BX, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5C, 8, -1, "pop", SP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5D, 8, -1, "pop", BP, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5E, 8, -1, "pop", SI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x5F, 8, -1, "pop", DI, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x60, 8, 0, "", NONE, NONE, 0), /* undefined (was pusha) */
    X86Instruction::new([0; 4], 0, 0, 0x61, 8, 0, "", NONE, NONE, 0), /* undefined (was popa) */
    X86Instruction::new([0; 4], 0, 0, 0x62, 8, 0, "", NONE, NONE, 0), /* undefined (was bound) */
    X86Instruction::new([0; 4], 0, 0, 0x63, 8, -1, "movsx", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x64, 8, 0, "fs", NONE, NONE, 0), /* FS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x65, 8, 0, "gs", NONE, NONE, 0), /* GS prefix */
    X86Instruction::new([0; 4], 0, 0, 0x66, 8, 0, "data", NONE, NONE, 0), /* op-size prefix */
    X86Instruction::new([0; 4], 0, 0, 0x67, 8, 0, "addr", NONE, NONE, 0), /* addr-size prefix */
    X86Instruction::new([0; 4], 0, 0, 0x68, 8, -1, "push", IMM, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x69, 8, -1, "imul", REG, RM, OP_ARG2_IMM),
    X86Instruction::new([0; 4], 0, 0, 0x6A, 8, -1, "push", IMM8, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x6B, 8, -1, "imul", REG, RM, OP_ARG2_IMM8),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6C,
        8,
        8,
        "ins",
        ESDI,
        DXS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6D,
        8,
        -1,
        "ins",
        ESDI,
        DXS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6E,
        8,
        8,
        "outs",
        DXS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x6F,
        8,
        -1,
        "outs",
        DXS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new([0; 4], 0, 0, 0x70, 8, 0, "jo", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x71, 8, 0, "jno", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x72, 8, 0, "jb", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x73, 8, 0, "jae", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x74, 8, 0, "jz", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x75, 8, 0, "jnz", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x76, 8, 0, "jbe", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x77, 8, 0, "ja", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x78, 8, 0, "js", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x79, 8, 0, "jns", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7A, 8, 0, "jp", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7B, 8, 0, "jnp", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7C, 8, 0, "jl", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7D, 8, 0, "jge", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7E, 8, 0, "jle", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x7F, 8, 0, "jg", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0x80, 8, 0, "", NONE, NONE, 0), /* arithmetic operations */
    X86Instruction::new([0; 4], 0, 0, 0x81, 8, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x82, 8, 0, "", NONE, NONE, 0), /* undefined (was alias for 80) */
    X86Instruction::new([0; 4], 0, 0, 0x83, 8, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x84, 8, 8, "test", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x85, 8, -1, "test", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x86, 8, 8, "xchg", REG, RM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x87, 8, -1, "xchg", REG, RM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x88, 8, 8, "mov", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x89, 8, -1, "mov", RM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8A, 8, 8, "mov", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8B, 8, -1, "mov", REG, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8C, 8, -1, "mov", RM, SEG16, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8D, 8, -1, "lea", REG, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8E, 8, -1, "mov", SEG16, RM, OP_OP32_REGONLY),
    X86Instruction::new([0; 4], 0, 0, 0x8F, 8, 0, "", NONE, NONE, 0), /* pop (subcode 0 only) */
    X86Instruction::new([0; 4], 0, 0, 0x90, 8, -1, "nop", NONE, NONE, OP_REP),
    X86Instruction::new([0; 4], 0, 0, 0x91, 8, -1, "xchg", AX, CX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x92, 8, -1, "xchg", AX, DX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x93, 8, -1, "xchg", AX, BX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x94, 8, -1, "xchg", AX, SP, 0),
    X86Instruction::new([0; 4], 0, 0, 0x95, 8, -1, "xchg", AX, BP, 0),
    X86Instruction::new([0; 4], 0, 0, 0x96, 8, -1, "xchg", AX, SI, 0),
    X86Instruction::new([0; 4], 0, 0, 0x97, 8, -1, "xchg", AX, DI, 0),
    X86Instruction::new([0; 4], 0, 0, 0x98, 8, -1, "cbw", NONE, NONE, 0), /* handled separately */
    X86Instruction::new([0; 4], 0, 0, 0x99, 8, -1, "cwd", NONE, NONE, 0), /* handled separately */
    X86Instruction::new([0; 4], 0, 0, 0x9A, 8, 0, "", NONE, NONE, 0), /* undefined (was call SEGPTR) */
    X86Instruction::new([0; 4], 0, 0, 0x9B, 8, 0, "wait", NONE, NONE, 0), /* wait ~prefix~ */
    X86Instruction::new([0; 4], 0, 0, 0x9C, 8, -1, "pushf", NONE, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x9D, 8, -1, "popf", NONE, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0x9E, 8, 0, "sahf", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x9F, 8, 0, "lahf", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA0, 8, 8, "mov", AL, MOFFS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA1, 8, -1, "mov", AX, MOFFS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA2, 8, 8, "mov", MOFFS, AL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA3, 8, -1, "mov", MOFFS, AX, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA4,
        8,
        8,
        "movs",
        DSSI,
        ESDI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA5,
        8,
        -1,
        "movs",
        DSSI,
        ESDI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA6,
        8,
        8,
        "cmps",
        DSSI,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xA7,
        8,
        -1,
        "cmps",
        DSSI,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xA8, 8, 8, "test", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xA9, 8, -1, "test", AX, IMM, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAA,
        8,
        8,
        "stos",
        ESDI,
        ALS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAB,
        8,
        -1,
        "stos",
        ESDI,
        AXS,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAC,
        8,
        8,
        "lods",
        ALS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAD,
        8,
        -1,
        "lods",
        AXS,
        DSSI,
        OP_STRING | OP_REP,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAE,
        8,
        8,
        "scas",
        ALS,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xAF,
        8,
        -1,
        "scas",
        AXS,
        ESDI,
        OP_STRING | OP_REPNE | OP_REPE,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xB0, 8, 8, "mov", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB1, 8, 8, "mov", CL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB2, 8, 8, "mov", DL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB3, 8, 8, "mov", BL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB4, 8, 8, "mov", AH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB5, 8, 8, "mov", CH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB6, 8, 8, "mov", DH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB7, 8, 8, "mov", BH, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB8, 8, -1, "mov", AX, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xB9, 8, -1, "mov", CX, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xBA, 8, -1, "mov", DX, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xBB, 8, -1, "mov", BX, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xBC, 8, -1, "mov", SP, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xBD, 8, -1, "mov", BP, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xBE, 8, -1, "mov", SI, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xBF, 8, -1, "mov", DI, IMM, OP_IMM64),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xC1, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xC2, 8, 0, "ret", IMM16, NONE, OP_STOP),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xC3,
        8,
        0,
        "ret",
        NONE,
        NONE,
        OP_STOP | OP_REPE | OP_REPNE,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xC4, 8, 0, "", NONE, NONE, 0), /* undefined (was les) */
    X86Instruction::new([0; 4], 0, 0, 0xC5, 8, 0, "", NONE, NONE, 0), /* undefined (was lds) */
    X86Instruction::new([0; 4], 0, 0, 0xC6, 0, 0, "", NONE, NONE, 0), /* mov (subcode 0 only) */
    X86Instruction::new([0; 4], 0, 0, 0xC7, 0, 0, "", NONE, NONE, 0), /* mov (subcode 0 only) */
    X86Instruction::new([0; 4], 0, 0, 0xC8, 8, 0, "enter", IMM16, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC9, 8, 0, "leave", NONE, NONE, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xCA,
        8,
        0,
        "ret",
        IMM16,
        NONE,
        OP_STOP | OP_FAR,
    ), /* a change in bitness should only happen across Segment boundaries */
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xCB,
        8,
        0,
        "ret",
        NONE,
        NONE,
        OP_STOP | OP_FAR,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xCC, 8, 0, "int3", NONE, NONE, OP_STOP),
    X86Instruction::new([0; 4], 0, 0, 0xCD, 8, 0, "int", IMM8, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCE, 8, 0, "into", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xCF, 8, 0, "iret", NONE, NONE, OP_STOP),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD1, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD2, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD3, 8, 0, "", NONE, NONE, 0), /* rotate/shift */
    X86Instruction::new([0; 4], 0, 0, 0xD4, 8, 0, "", NONE, NONE, 0), /* undefined (was aam) */
    X86Instruction::new([0; 4], 0, 0, 0xD5, 8, 0, "", NONE, NONE, 0), /* undefined (was aad) */
    X86Instruction::new([0; 4], 0, 0, 0xD6, 8, 0, "", NONE, NONE, 0), /* undefined (was salc?) */
    X86Instruction::new([0; 4], 0, 0, 0xD7, 8, 0, "xlatb", DSBX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDA, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDB, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDC, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDD, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDE, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 8, 0, "", NONE, NONE, 0), /* float ops */
    X86Instruction::new([0; 4], 0, 0, 0xE0, 8, 0, "loopnz", REL8, NONE, OP_BRANCH), /* fixme: how to print this? */
    X86Instruction::new([0; 4], 0, 0, 0xE1, 8, 0, "loopz", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0xE2, 8, 0, "loop", REL8, NONE, OP_BRANCH),
    X86Instruction::new([0; 4], 0, 0, 0xE3, 8, -1, "jcxz", REL8, NONE, OP_BRANCH), /* name handled separately */
    X86Instruction::new([0; 4], 0, 0, 0xE4, 8, 8, "in", AL, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE5, 8, -1, "in", AX, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE6, 8, 8, "out", IMM, AL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE7, 8, -1, "out", IMM, AX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE8, 8, -1, "call", REL, NONE, OP_BRANCH),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xE9,
        8,
        -1,
        "jmp",
        REL,
        NONE,
        OP_BRANCH | OP_STOP,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xEA, 8, 0, "", NONE, NONE, 0), /* undefined (was jmp/SEGPTR) */
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xEB,
        8,
        0,
        "jmp",
        REL8,
        NONE,
        OP_BRANCH | OP_STOP,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xEC, 8, 8, "in", AL, DXS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xED, 8, -1, "in", AX, DXS, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEE, 8, 8, "out", DXS, AL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEF, 8, -1, "out", DXS, AX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF0, 8, 0, "lock", NONE, NONE, 0), /* lock prefix */
    X86Instruction::new([0; 4], 0, 0, 0xF1, 8, 0, "", NONE, NONE, 0), /* undefined (fixme: int1/icebp?) */
    X86Instruction::new([0; 4], 0, 0, 0xF2, 8, 0, "repne", NONE, NONE, 0), /* repne prefix */
    X86Instruction::new([0; 4], 0, 0, 0xF3, 8, 0, "repe", NONE, NONE, 0), /* repe prefix */
    X86Instruction::new([0; 4], 0, 0, 0xF4, 8, 0, "hlt", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF5, 8, 0, "cmc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 8, 0, "", NONE, NONE, 0), /* group #3 */
    X86Instruction::new([0; 4], 0, 0, 0xF7, 8, 0, "", NONE, NONE, 0), /* group #3 */
    X86Instruction::new([0; 4], 0, 0, 0xF8, 8, 0, "clc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF9, 8, 0, "stc", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFA, 8, 0, "cli", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFB, 8, 0, "sti", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFC, 8, 0, "cld", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFD, 8, 0, "std", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFE, 8, 0, "", NONE, NONE, 0), /* inc/dec */
    X86Instruction::new([0; 4], 0, 0, 0xFF, 8, 0, "", NONE, NONE, 0), /* group #5 */
];

pub const INSTRUCTIONS_FPU_M: [X86Instruction; 64] = [
    X86Instruction::new([0; 4], 0, 0, 0xD8, 0, 32, "fadd", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 1, 32, "fmul", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 2, 32, "fcom", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 3, 32, "fcomp", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 4, 32, "fsub", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 5, 32, "fsubr", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 6, 32, "fdiv", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 7, 32, "fdivr", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0, 32, "fld", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 1, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 2, 32, "fst", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 3, 32, "fstp", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 4, 0, "fldenv", MEM, NONE, 0), /* 14/28 */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 5, 0, "fldcw", MEM, NONE, 0),  /* 16 */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 6, 0, "fnstenv", MEM, NONE, 0), /* 14/28 */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 7, 0, "fnstcw", MEM, NONE, 0), /* 16 */
    X86Instruction::new([0; 4], 0, 0, 0xDA, 0, 32, "fiadd", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 1, 32, "fimul", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 2, 32, "ficom", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 3, 32, "ficomp", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 4, 32, "fisub", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 5, 32, "fisubr", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 6, 32, "fidiv", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 7, 32, "fidivr", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0, 32, "fild", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 1, 32, "fisttp", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 2, 32, "fist", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 3, 32, "fistp", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 4, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 5, 80, "fld", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 6, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 7, 80, "fstp", MEM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 0, 64, "fadd", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 1, 64, "fmul", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 2, 64, "fcom", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 3, 64, "fcomp", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 4, 64, "fsub", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 5, 64, "fsubr", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 6, 64, "fdiv", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 7, 64, "fdivr", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 0, 64, "fld", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 1, 64, "fisttp", MEM, NONE, OP_LL),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 2, 64, "fst", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 3, 64, "fstp", MEM, NONE, OP_L),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 4, 0, "frstor", MEM, NONE, 0), /* 94/108 */
    X86Instruction::new([0; 4], 0, 0, 0xDD, 5, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 6, 0, "fnsave", MEM, NONE, 0), /* 94/108 */
    X86Instruction::new([0; 4], 0, 0, 0xDD, 7, 0, "fnstsw", MEM, NONE, 0), /* 16 */
    X86Instruction::new([0; 4], 0, 0, 0xDE, 0, 16, "fiadd", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 1, 16, "fimul", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 2, 16, "ficom", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 3, 16, "ficomp", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 4, 16, "fisub", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 5, 16, "fisubr", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 6, 16, "fidiv", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 7, 16, "fidivr", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 0, 16, "fild", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 1, 16, "fisttp", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 2, 16, "fist", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 3, 16, "fistp", MEM, NONE, OP_S),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 4, 0, "fbld", MEM, NONE, 0), /* 80 */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 5, 64, "fild", MEM, NONE, OP_LL),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 6, 0, "fbstp", MEM, NONE, 0), /* 80 */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 7, 64, "fistp", MEM, NONE, OP_LL),
];

pub const instructions_fpu_r: [X86Instruction; 64] = [
    X86Instruction::new([0; 4], 0, 0, 0xD8, 0, 0, "fadd", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 1, 0, "fmul", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 2, 0, "fcom", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 3, 0, "fcomp", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 4, 0, "fsub", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 5, 0, "fsubr", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 6, 0, "fdiv", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 7, 0, "fdivr", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0, 0, "fld", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 1, 0, "fxch", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 2, 0, "", NONE, NONE, 0), /* fnop */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 3, 0, "fstp", STX, NONE, 0), /* partial alias - see ref.x86asm.net */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 4, 0, "", NONE, NONE, 0), /* fchs, fabs, ftst, fxam */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 5, 0, "", NONE, NONE, 0), /* fldXXX */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 6, 0, "", NONE, NONE, 0), /* f2xm1, fyl2x, ... */
    X86Instruction::new([0; 4], 0, 0, 0xD9, 7, 0, "", NONE, NONE, 0), /* fprem, fyl2xp1, ... */
    X86Instruction::new([0; 4], 0, 0, 0xDA, 0, 0, "fcmovb", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 1, 0, "fcmove", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 2, 0, "fcmovbe", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 3, 0, "fcmovu", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 4, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 5, 0, "", NONE, NONE, 0), /* fucompp */
    X86Instruction::new([0; 4], 0, 0, 0xDA, 6, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 7, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0, 0, "fcmovnb", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 1, 0, "fcmovne", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 2, 0, "fcmovnbe", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 3, 0, "fcmovnu", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 4, 0, "", NONE, NONE, 0), /* fneni, fndisi, fnclex, fninit, fnsetpm */
    X86Instruction::new([0; 4], 0, 0, 0xDB, 5, 0, "fucomi", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 6, 0, "fcomi", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 7, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 0, 0, "fadd", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 1, 0, "fmul", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 2, 0, "fcom", STX, NONE, 0), /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDC, 3, 0, "fcomp", STX, NONE, 0), /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDC, 4, 0, "fsubr", STX, ST, 0), /* nasm, masm, sandpile have these reversed, gcc doesn't */
    X86Instruction::new([0; 4], 0, 0, 0xDC, 5, 0, "fsub", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 6, 0, "fdivr", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 7, 0, "fdiv", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 0, 0, "ffree", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 1, 0, "fxch", STX, NONE, 0), /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDD, 2, 0, "fst", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 3, 0, "fstp", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 4, 0, "fucom", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 5, 0, "fucomp", STX, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 6, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 7, 0, "", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 0, 0, "faddp", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 1, 0, "fmulp", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 2, 0, "fcomp", STX, NONE, 0), /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDE, 3, 0, "", NONE, NONE, 0),     /* fcompp */
    X86Instruction::new([0; 4], 0, 0, 0xDE, 4, 0, "fsubrp", STX, ST, 0), /* nasm, masm, sandpile have these reversed, gcc doesn't */
    X86Instruction::new([0; 4], 0, 0, 0xDE, 5, 0, "fsubp", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 6, 0, "fdivrp", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 7, 0, "fdivp", STX, ST, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 0, 0, "ffreep", STX, NONE, 0), /* unofficial name */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 1, 0, "fxch", STX, NONE, 0),   /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 2, 0, "fstp", STX, NONE, 0),   /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 3, 0, "fstp", STX, NONE, 0),   /* alias */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 4, 0, "", NONE, NONE, 0),      /* fnstsw */
    X86Instruction::new([0; 4], 0, 0, 0xDF, 5, 0, "fucomip", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 6, 0, "fcomip", ST, STX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 7, 0, "", NONE, NONE, 0),
];

pub const instructions_fpu_single: [X86Instruction; 36] = [
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xD0, 0, "fnop", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xE0, 0, "fchs", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xE1, 0, "fabs", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xE4, 0, "ftst", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xE5, 0, "fxam", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xE8, 0, "fld1", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xE9, 0, "fldl2t", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xEA, 0, "fldl2e", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xEB, 0, "fldpi", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xEC, 0, "fldlg2", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xED, 0, "fldln2", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xEE, 0, "fldz", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF0, 0, "f2xm1", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF1, 0, "fyl2x", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF2, 0, "fptan", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF3, 0, "fpatan", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF4, 0, "fxtract", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF5, 0, "fprem1", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF6, 0, "fdecstp", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF7, 0, "fincstp", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF8, 0, "fprem", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xF9, 0, "fyl2xp1", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xFA, 0, "fsqrt", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xFB, 0, "fsincos", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xFC, 0, "frndint", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xFD, 0, "fscale", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xFE, 0, "fsin", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 0xFF, 0, "fcos", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 0xE9, 0, "fucompp", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0xE0, 0, "fneni", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0xE1, 0, "fndisi", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0xE2, 0, "fnclex", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0xE3, 0, "fninit", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 0xE4, 0, "fnsetpm", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 0xD9, 0, "fcompp", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 0xE0, 0, "fnstsw", AX, NONE, 0),
];

pub const INSTRUCTIONS_GROUP: [X86Instruction; 108] = [
    X86Instruction::new([0; 4], 0, 0, 0x80, 0, 8, "add", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 1, 8, "or", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 2, 8, "adc", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 3, 8, "sbb", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 4, 8, "and", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 5, 8, "sub", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 6, 8, "xor", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x80, 7, 8, "cmp", RM, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x81, 0, -1, "add", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 1, -1, "or", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 2, -1, "adc", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 3, -1, "sbb", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 4, -1, "and", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 5, -1, "sub", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 6, -1, "xor", RM, IMM, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x81, 7, -1, "cmp", RM, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x82, 0, 8, "add", RM, IMM8, OP_LOCK), /*  aliased */
    X86Instruction::new([0; 4], 0, 0, 0x82, 1, 8, "or", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x82, 2, 8, "adc", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x82, 3, 8, "sbb", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x82, 4, 8, "and", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x82, 5, 8, "sub", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x82, 6, 8, "xor", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x82, 7, 8, "cmp", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x83, 0, -1, "add", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 1, -1, "or", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 2, -1, "adc", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 3, -1, "sbb", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 4, -1, "and", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 5, -1, "sub", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 6, -1, "xor", RM, IMM8, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0x83, 7, -1, "cmp", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x8F, 0, -1, "pop", RM, NONE, OP_STACK),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 0, 8, "rol", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 1, 8, "ror", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 2, 8, "rcl", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 3, 8, "rcr", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 4, 8, "shl", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 5, 8, "shr", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC0, 6, 8, "sal", RM, IMM8, 0), /* aliased to shl */
    X86Instruction::new([0; 4], 0, 0, 0xC0, 7, 8, "sar", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 0, -1, "rol", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 1, -1, "ror", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 2, -1, "rcl", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 3, -1, "rcr", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 4, -1, "shl", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 5, -1, "shr", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC1, 6, -1, "sal", RM, IMM8, 0), /* aliased to shl */
    X86Instruction::new([0; 4], 0, 0, 0xC1, 7, -1, "sar", RM, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC6, 0, 8, "mov", RM, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC7, 0, -1, "mov", RM, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 0, 8, "rol", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 1, 8, "ror", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 2, 8, "rcl", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 3, 8, "rcr", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 4, 8, "shl", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 5, 8, "shr", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 6, 8, "sal", RM, ONE, 0), /* aliased to shl */
    X86Instruction::new([0; 4], 0, 0, 0xD0, 7, 8, "sar", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 0, -1, "rol", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 1, -1, "ror", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 2, -1, "rcl", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 3, -1, "rcr", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 4, -1, "shl", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 5, -1, "shr", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 6, -1, "sal", RM, ONE, 0), /* aliased to shl */
    X86Instruction::new([0; 4], 0, 0, 0xD1, 7, -1, "sar", RM, ONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 0, 8, "rol", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 1, 8, "ror", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 2, 8, "rcl", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 3, 8, "rcr", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 4, 8, "shl", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 5, 8, "shr", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 6, 8, "sal", RM, CL, 0), /* aliased to shl */
    X86Instruction::new([0; 4], 0, 0, 0xD2, 7, 8, "sar", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 0, -1, "rol", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 1, -1, "ror", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 2, -1, "rcl", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 3, -1, "rcr", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 4, -1, "shl", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 5, -1, "shr", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 6, -1, "sal", RM, CL, 0), /* aliased to shl */
    X86Instruction::new([0; 4], 0, 0, 0xD3, 7, -1, "sar", RM, CL, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 0, 8, "test", RM, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 1, 8, "test", RM, IMM, 0), /* aliased to 0 */
    X86Instruction::new([0; 4], 0, 0, 0xF6, 2, 8, "not", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 3, 8, "neg", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 4, 8, "mul", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 5, 8, "imul", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 6, 8, "div", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 7, 8, "idiv", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 0, -1, "test", RM, IMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 1, -1, "test", RM, IMM, 0), /* aliased to 0 */
    X86Instruction::new([0; 4], 0, 0, 0xF7, 2, -1, "not", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 3, -1, "neg", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 4, -1, "mul", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 5, -1, "imul", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 6, -1, "div", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 7, -1, "idiv", RM, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFE, 0, 8, "inc", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xFE, 1, 8, "dec", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xFF, 0, -1, "inc", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xFF, 1, -1, "dec", RM, NONE, OP_LOCK),
    X86Instruction::new([0; 4], 0, 0, 0xFF, 2, -1, "call", RM, NONE, OP_64),
    X86Instruction::new([0; 4], 0, 0, 0xFF, 3, -1, "call", MEM, NONE, OP_64 | OP_FAR), /* a change in bitness should only happen across Segment boundaries */
    X86Instruction::new([0; 4], 0, 0, 0xFF, 4, -1, "jmp", RM, NONE, OP_64 | OP_STOP),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xFF,
        5,
        -1,
        "jmp",
        MEM,
        NONE,
        OP_64 | OP_STOP | OP_FAR,
    ), /* a change in bitness should only happen across Segment boundaries */
    X86Instruction::new([0; 4], 0, 0, 0xFF, 6, -1, "push", RM, NONE, OP_STACK),
];

pub const INSTRUCTIONS_SSE: [X86Instruction; 109] = [
    X86Instruction::new([0; 4], 0, 0, 0x10, 8, 0, "movups", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x11, 8, 0, "movups", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x12, 8, 0, "movlps", XMM, XM, 0), /* fixme: movhlps */
    X86Instruction::new([0; 4], 0, 0, 0x13, 8, 0, "movlps", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x14, 8, 0, "unpcklps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x15, 8, 0, "unpckhps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x16, 8, 0, "movhps", XMM, XM, 0), /* fixme: movlhps */
    X86Instruction::new([0; 4], 0, 0, 0x17, 8, 0, "movhps", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x28, 8, 0, "movaps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x29, 8, 0, "movaps", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2A, 8, 0, "cvtpi2ps", XMM, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2B, 8, 0, "movntps", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2C, 8, 0, "cvttps2pi", MMX, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2D, 8, 0, "cvtps2pi", MMX, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2E, 8, 0, "ucomiss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2F, 8, 0, "comiss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x50, 8, 0, "movmskps", REGONLY, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x51, 8, 0, "sqrtps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x52, 8, 0, "rsqrtps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x53, 8, 0, "rcpps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x54, 8, 0, "andps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x55, 8, 0, "andnps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x56, 8, 0, "orps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x57, 8, 0, "xorps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x58, 8, 0, "addps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x59, 8, 0, "mulps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5A, 8, 0, "cvtps2pd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5B, 8, 0, "cvtdq2ps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5C, 8, 0, "subps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5D, 8, 0, "minps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5E, 8, 0, "divps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5F, 8, 0, "maxps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x60, 8, 0, "punpcklbw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x61, 8, 0, "punpcklwd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x62, 8, 0, "punpckldq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x63, 8, 0, "packsswb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x64, 8, 0, "pcmpgtb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x65, 8, 0, "pcmpgtw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x66, 8, 0, "pcmpgtd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x67, 8, 0, "packuswb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x68, 8, 0, "punpckhbw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x69, 8, 0, "punpckhwd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6A, 8, 0, "punpckhdq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6B, 8, 0, "packssdw", MMX, MM, 0),
    /* 6C/D unused */
    X86Instruction::new([0; 4], 0, 0, 0x6E, 8, 0, "movd", MMX, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6F, 8, 0, "movq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x70, 8, 0, "pshufw", MMX, MM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x71, 2, 0, "psrlw", MMXONLY, IMM8, 0), /* fixme: make sure this works */
    X86Instruction::new([0; 4], 0, 0, 0x71, 4, 0, "psraw", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x71, 6, 0, "psllw", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x72, 2, 0, "psrld", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x72, 4, 0, "psrad", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x72, 6, 0, "pslld", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x73, 2, 0, "psrlq", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x73, 6, 0, "psllq", MMXONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x74, 8, 0, "pcmpeqb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x75, 8, 0, "pcmpeqw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x76, 8, 0, "pcmpeqd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x77, 8, 0, "emms", NONE, NONE, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7E, 8, 0, "movd", RM, MMX, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7F, 8, 0, "movq", MM, MMX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC2, 8, 0, "cmpps", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0xC3, 8, 0, "movnti", MEM, REG, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC4, 8, 0, "pinsrw", MMX, RM, OP_ARG2_IMM8),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xC5,
        8,
        0,
        "pextrw",
        REGONLY,
        MMX,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xC6, 8, 0, "shufps", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 8, 0, "psrlw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 8, 0, "psrld", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 8, 0, "psrlq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD4, 8, 0, "paddq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD5, 8, 0, "pmullw", MMX, MM, 0),
    /* D6 unused */
    X86Instruction::new([0; 4], 0, 0, 0xD7, 8, 0, "pmovmskb", REGONLY, MMX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 8, 0, "psubusb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 8, 0, "psubusw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 8, 0, "pminub", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 8, 0, "pand", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 8, 0, "paddusb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 8, 0, "paddusw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 8, 0, "pmaxub", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 8, 0, "pandn", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE0, 8, 0, "pavgb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE1, 8, 0, "psraw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE2, 8, 0, "psrad", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE3, 8, 0, "pavgw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE4, 8, 0, "pmulhuw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE5, 8, 0, "pmulhw", MMX, MM, 0),
    /* E6 unused */
    X86Instruction::new([0; 4], 0, 0, 0xE7, 8, 0, "movntq", MEM, MMX, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE8, 8, 0, "psubsb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE9, 8, 0, "psubsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEA, 8, 0, "pminsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEB, 8, 0, "por", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEC, 8, 0, "paddsb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xED, 8, 0, "paddsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEE, 8, 0, "pmaxsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEF, 8, 0, "pxor", MMX, MM, 0),
    /* F0 unused */
    X86Instruction::new([0; 4], 0, 0, 0xF1, 8, 0, "psllw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF2, 8, 0, "pslld", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF3, 8, 0, "psllq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF4, 8, 0, "pmuludq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF5, 8, 0, "pmaddwd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 8, 0, "psadbw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 8, 0, "maskmovq", MMX, MMXONLY, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF8, 8, 0, "psubb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF9, 8, 0, "psubw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFA, 8, 0, "psubd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFB, 8, 0, "psubq", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFC, 8, 0, "paddb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFD, 8, 0, "paddw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFE, 8, 0, "paddd", MMX, MM, 0),
];

pub const INSTRUCTIONS_SSE_OP32: [X86Instruction; 114] = [
    X86Instruction::new([0; 4], 0, 0, 0x10, 8, 0, "movupd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x11, 8, 0, "movupd", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x12, 8, 0, "movlpd", XMM, XM, 0), /* fixme: movhlps */
    X86Instruction::new([0; 4], 0, 0, 0x13, 8, 0, "movlpd", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x14, 8, 0, "unpcklpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x15, 8, 0, "unpckhpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x16, 8, 0, "movhpd", XMM, XM, 0), /* fixme: movlhps */
    X86Instruction::new([0; 4], 0, 0, 0x17, 8, 0, "movhpd", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x28, 8, 0, "movapd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x29, 8, 0, "movapd", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2A, 8, 0, "cvtpi2pd", XMM, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2B, 8, 0, "movntpd", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2C, 8, 0, "cvttpd2pi", MMX, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2D, 8, 0, "cvtpd2pi", MMX, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2E, 8, 0, "ucomisd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2F, 8, 0, "comisd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x50, 8, 32, "movmskpd", REGONLY, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x51, 8, 0, "sqrtpd", XMM, XM, 0),
    /* 52/3 unused */
    X86Instruction::new([0; 4], 0, 0, 0x54, 8, 0, "andpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x55, 8, 0, "andnpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x56, 8, 0, "orpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x57, 8, 0, "xorpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x58, 8, 0, "addpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x59, 8, 0, "mulpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5A, 8, 0, "cvtpd2ps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5B, 8, 0, "cvtps2dq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5C, 8, 0, "subpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5D, 8, 0, "minpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5E, 8, 0, "divpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5F, 8, 0, "maxpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x60, 8, 0, "punpcklbw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x61, 8, 0, "punpcklwd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x62, 8, 0, "punpckldq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x63, 8, 0, "packsswb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x64, 8, 0, "pcmpgtb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x65, 8, 0, "pcmpgtw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x66, 8, 0, "pcmpgtd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x67, 8, 0, "packuswb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x68, 8, 0, "punpckhbw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x69, 8, 0, "punpckhwd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6A, 8, 0, "punpckhdq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6B, 8, 0, "packssdw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6C, 8, 0, "punpcklqdq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6D, 8, 0, "punpckhqdq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6E, 8, -1, "mov", XMM, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6F, 8, 0, "movdqa", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x70, 8, 0, "pshufd", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x71, 2, 0, "psrlw", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x71, 4, 0, "psraw", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x71, 6, 0, "psllw", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x72, 2, 0, "psrld", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x72, 4, 0, "psrad", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x72, 6, 0, "pslld", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x73, 2, 0, "psrlq", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x73, 3, 0, "psrldq", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x73, 6, 0, "psllq", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x73, 7, 0, "pslldq", XMMONLY, IMM8, 0),
    X86Instruction::new([0; 4], 0, 0, 0x74, 8, 0, "pcmpeqb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x75, 8, 0, "pcmpeqw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x76, 8, 0, "pcmpeqd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7C, 8, 0, "haddpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7D, 8, 0, "hsubpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7E, 8, -1, "mov", RM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7F, 8, 0, "movdqa", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC2, 8, 0, "cmppd", XMM, XM, OP_ARG2_IMM8),
    /* C3 unused */
    X86Instruction::new([0; 4], 0, 0, 0xC4, 8, 0, "pinsrw", XMM, RM, OP_ARG2_IMM8),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0xC5,
        8,
        0,
        "pextrw",
        REGONLY,
        XMM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new([0; 4], 0, 0, 0xC6, 8, 0, "shufpd", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 8, 0, "addsubpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD1, 8, 0, "psrlw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD2, 8, 0, "psrld", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD3, 8, 0, "psrlq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD4, 8, 0, "paddd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD5, 8, 0, "pmullw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD6, 8, 0, "movq", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD7, 8, 32, "pmovmskb", REGONLY, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD8, 8, 0, "psubusb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xD9, 8, 0, "psubusw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDA, 8, 0, "pminub", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDB, 8, 0, "pand", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDC, 8, 0, "paddusb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDD, 8, 0, "paddusw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDE, 8, 0, "pmaxub", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xDF, 8, 0, "pandn", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE0, 8, 0, "pavgb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE1, 8, 0, "psraw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE2, 8, 0, "psrad", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE3, 8, 0, "pavgw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE4, 8, 0, "pmulhuw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE5, 8, 0, "pmulhw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE6, 8, 0, "cvttpd2dq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE7, 8, 0, "movntdq", MEM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE8, 8, 0, "psubsb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xE9, 8, 0, "psubsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEA, 8, 0, "pminsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEB, 8, 0, "por", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEC, 8, 0, "paddsb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xED, 8, 0, "paddsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEE, 8, 0, "pmaxsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xEF, 8, 0, "pxor", XMM, XM, 0),
    /* F0 unused */
    X86Instruction::new([0; 4], 0, 0, 0xF1, 8, 0, "psllw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF2, 8, 0, "pslld", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF3, 8, 0, "psllq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF4, 8, 0, "pmuludq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF5, 8, 0, "pmaddwd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF6, 8, 0, "psadbw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF7, 8, 0, "maskmovdqu", XMM, XMMONLY, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF8, 8, 0, "psubb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF9, 8, 0, "psubw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFA, 8, 0, "psubd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFB, 8, 0, "psubq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFC, 8, 0, "paddb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFD, 8, 0, "paddw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xFE, 8, 0, "paddd", XMM, XM, 0),
];

pub const INSTRUCTIONS_SSE_REPE: [X86Instruction; 25] = [
    X86Instruction::new([0; 4], 0, 0, 0x10, 8, 0, "movss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x11, 8, 0, "movss", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x12, 8, 0, "movsldup", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x16, 8, 0, "movshdup", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2A, 8, 0, "cvtsi2ss", XMM, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2C, 8, 0, "cvttss2si", REG, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2D, 8, 0, "cvtss2si", REG, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x51, 8, 0, "sqrtss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x52, 8, 0, "rsqrtss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x53, 8, 0, "rcpss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x58, 8, 0, "addss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x59, 8, 0, "mulss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5A, 8, 0, "cvtss2sd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5B, 8, 0, "cvttps2dq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5C, 8, 0, "subss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5D, 8, 0, "minss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5E, 8, 0, "divss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5F, 8, 0, "maxss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x6F, 8, 0, "movdqu", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x70, 8, 0, "pshufhw", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x7E, 8, 0, "movq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7F, 8, 0, "movdqu", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xB8, 8, 16, "popcnt", REG, RM, 0), /* not SSE */
    X86Instruction::new([0; 4], 0, 0, 0xC2, 8, 0, "cmpss", XMM, XM, OP_ARG2_IMM8),
    /*    Operand::new(0xD6, 8,  0, "movq2dq",    XMM,    MMX), */
    X86Instruction::new([0; 4], 0, 0, 0xE6, 8, 0, "cvtdq2pd", XMM, XM, 0),
];

pub const INSTRUCTIONS_SSE_REPNE: [X86Instruction; 21] = [
    X86Instruction::new([0; 4], 0, 0, 0x10, 8, 0, "movsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x11, 8, 0, "movsd", XM, XMM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x12, 8, 0, "movddup", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2A, 8, 0, "cvtsi2sd", XMM, RM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2C, 8, 0, "cvttsd2si", REG, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x2D, 8, 0, "cvtsd2si", REG, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x51, 8, 0, "sqrtsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x58, 8, 0, "addsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x59, 8, 0, "mulsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5A, 8, 0, "cvtsd2ss", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5C, 8, 0, "subsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5D, 8, 0, "minsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5E, 8, 0, "divsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x5F, 8, 0, "maxsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x70, 8, 0, "pshuflw", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x7C, 8, 0, "haddps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x7D, 8, 0, "hsubps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xC2, 8, 0, "cmpsd", XMM, XM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0xD0, 8, 0, "addsubps", XMM, XM, 0),
    /*    Operand::new(0xD6, 8,  0, "movdq2q",    MMX,    XMM), */
    X86Instruction::new([0; 4], 0, 0, 0xE6, 8, 0, "cvtpd2dq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0xF0, 8, 0, "lddqu", XMM, MEM, 0),
];

pub const INSTRUCTIONS_SSE_SINGLE: [X86Instruction; 18] = [
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x00, 0, "pshufb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x01, 0, "phaddw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x02, 0, "phaddd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x03, 0, "phaddsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x04, 0, "pmaddubsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x05, 0, "phsubw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x06, 0, "phsubd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x07, 0, "phsubsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x08, 0, "psignb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x09, 0, "psignw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x0A, 0, "psignd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x0B, 0, "pmulhrsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x1C, 0, "pabsb", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x1D, 0, "pabsw", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x1E, 0, "pabsd", MMX, MM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0xF0, 16, "movbe", REG, MEM, 0), /* not SSE */
    X86Instruction::new([0; 4], 0, 0, 0x38, 0xF1, 16, "movbe", MEM, REG, 0), /* not SSE */
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0F,
        0,
        "palignr",
        MMX,
        MM,
        OP_ARG2_IMM8,
    ),
];

pub const INSTRUCTIONS_SSE_SINGLE_OP32: [X86Instruction; 69] = [
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x00, 0, "pshufb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x01, 0, "phaddw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x02, 0, "phaddd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x03, 0, "phaddsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x04, 0, "pmaddubsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x05, 0, "phsubw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x06, 0, "phsubd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x07, 0, "phsubsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x08, 0, "psignb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x09, 0, "psignw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x0A, 0, "psignd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x0B, 0, "pmulhrsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x10, 0, "pblendvb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x14, 0, "blendvps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x15, 0, "blendvpd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x17, 0, "ptest", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x1C, 0, "pabsb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x1D, 0, "pabsw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x1E, 0, "pabsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x20, 0, "pmovsxbw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x21, 0, "pmovsxbd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x22, 0, "pmovsxbq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x23, 0, "pmovsxwd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x24, 0, "pmovsxwq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x25, 0, "pmovsxdq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x28, 0, "pmuldq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x29, 0, "pcmpeqq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x2A, 0, "movntdqa", XMM, MEM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x2B, 0, "packusdw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x30, 0, "pmovzxbw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x31, 0, "pmovzxbd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x32, 0, "pmovzxbq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x33, 0, "pmovzxwd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x34, 0, "pmovzxwq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x35, 0, "pmovzxdq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x37, 0, "pcmpgtq", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x38, 0, "pminsb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x39, 0, "pminsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x3A, 0, "pminuw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x3B, 0, "pminud", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x3C, 0, "pmaxsb", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x3D, 0, "pmaxsd", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x3E, 0, "pmaxuw", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x3F, 0, "pmaxud", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x40, 0, "pmaxlld", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x38, 0x41, 0, "phminposuw", XMM, XM, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x08,
        0,
        "roundps",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x09,
        0,
        "roundpd",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0A,
        0,
        "roundss",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0B,
        0,
        "roundsd",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0C,
        0,
        "blendps",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0D,
        0,
        "blendpd",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0E,
        0,
        "pblendw",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x0F,
        0,
        "palignr",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x14, 0, "pextrb", RM, XMM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x15, 0, "pextrw", RM, XMM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x16, 0, "pextrd", RM, XMM, OP_ARG2_IMM8),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x17,
        0,
        "extractps",
        RM,
        XMM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x20, 0, "pinsrb", XMM, RM, OP_ARG2_IMM8),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x21,
        0,
        "insertps",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x22, 0, "pinsrd", XMM, RM, OP_ARG2_IMM8),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x40, 0, "dpps", XMM, XM, 0),
    X86Instruction::new([0; 4], 0, 0, 0x3A, 0x41, 0, "dppd", XMM, XM, 0),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x42,
        0,
        "mpsqdbw",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x44,
        0,
        "pclmulqdq",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x60,
        0,
        "pcmpestrm",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x61,
        0,
        "pcmpestri",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x62,
        0,
        "pcmpistrm",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
    X86Instruction::new(
        [0; 4],
        0,
        0,
        0x3A,
        0x63,
        0,
        "pcmpistri",
        XMM,
        XM,
        OP_ARG2_IMM8,
    ),
];
